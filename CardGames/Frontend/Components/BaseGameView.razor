@using CardGames.Core
@using CardGames.Core.Extensions
@using CardGames.Extensions
@typeparam TGame
@typeparam TPlayer

@if (Game.State == GameState.Lobby)
{
	<h1>Game code: @(Game.Code.ToString())</h1>
	<p>Your name: @(CurrentPlayer.Name.Str())</p>

	<ul role="list">
		@foreach (var player in Game.Players)
		{
			if (player.Key != CurrentPlayer.Key)
			{
				<li @key="@(player.Key.Str())">@(player.Name.Str())</li>
			}
		}
	</ul>

	<div class="mt-3 d-flex flex-row flex-nowrap gap-3">
		<button type="button" class="btn btn-danger" @onclick="@(LeaveGame)">
			Leave
		</button>

		@if ((Game.Host == CurrentPlayer))
		{
			<button type="button" class="btn btn-danger" @onclick="@(StartGame)" disabled="@(!Game.CanStart)">
				Start (@(Game.Players.Length.Str())/@(Game.Players.Capacity.Str())
			</button>
		}
	</div>
}
else
{
	@(ChildContent)

	@if (Game.State == GameState.Finished)
	{
		var winner = Game.Players[Game.CurrentPlayerIndex] ?? CurrentPlayer;

		<div class="position-absolute top-0 start-0 bottom-0 end-0 bg-black bg-opacity-50" style="z-index: 1000;">
			<h1 class="text-white">@(winner == CurrentPlayer ? "You won" : winner.Name.Str() + " won")</h1>

			<button type="button" class="btn btn-primary" @onclick="@(OnLeaveGame)">
				Leave
			</button>
		</div>
	}
}
